<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <!-- header.ejs를 포함 -->
    <%- include('header.ejs')%>
</head>
<body>
    <h1>웹 소켓 테스트</h1>
    <!-- 유저가 보낼 데이터를 입력하는 공간 -->
    <input type="text" id="input_data"><br>
    <button id = 'btn_send'>메시지 전송</button>
    <button id = 'btn_close'>연결 끊기</button><br>
    <!-- 서버가 유저에게 보내는 데이터를 표시하는 공간 -->
    <p></p>

    <script>

        // 웹소켓 클라이언트 객체 생성
        const webSocket = new WebSocket("ws://localhost:80")

        // 웹소켓 이벤트 처리 

        // 연결이 되었을 때
        webSocket.onopen = function(){
            console.log('웹 소켓 서버와의 연결')
        }

        //  메시지를 수신할 때
        webSocket.onmessage = function(event){
            console.log('웹 소켓 서버에서 받은 메시지 :', event.data)
            $('p').text(event.data)
        }

        // 에러가 발생하는 경우
        webSocket.onerror = function(event){
            console.log('웹 소켓과의 에러 발생')
        }

        // 연결이 종료되는 경우
        webSocket.onclose = function(){
            console.log('연결이 종료')
        }
        
        // 웹 소켓과의 이벤트 처리 완료


        // 버튼 클릭 이벤트 지정 

        // 웹 소켓에 메시지를 보내기 
        let count = 1
        // document.getElementById('btn_send').onclick
        $('#btn_send')
        .click(function(){
            // 유저가 입력한 데이터를 변수에 대입
            let message = $('#input_data').val()
            // 웹 소켓 서버와의 연결 상태를 확인
            // == :  비교 연산자(값이 같다)
            // === : 비교 연산자(값과 데이터의 형태가 같다)
            if(webSocket.readyState === webSocket.OPEN){
                webSocket.send(message)
                // 유저가 입력하는 공간을 초기화
                $('#input_data').val('')
                // count++
            }else{
                alert('연결된 웹소켓 서버가 없습니다.')
            }
        })

        // 웹 소켓 서버와의 연결을 종료
        $('#btn_close')
        .click(function(){
            if(webSocket.readystate === webSocket.OPEN){
                webSocket.close()
            }else{
                alert('연결된 웹소켓 서버가 없습니다.')
            }
        })


    </script>
</body>
</html>